PROTOCOL

This file contains notes on what has been done and what needs to be done. It also 
holds important things to remember.

OPEN TASKS

- transform.clj
    l. 38: o/a -> op/args
    help function in let?
- extend grammar (!-> should be nimpl)
- tseitin tests
- write protocol (markdown see instaparse)
- options for truth table: show satisfying/unsatisfying only
- limit amount of atoms for truth table (e.g. to 16)
- remove tautologies from cnf
- dimacs format generator
- SAT4J wrapper
- distinguish between "human formula" ("A and B") and clojure code (and a b) automatically
- visualize formula tree graphically (instaparse/visualize) 
- comparison project, core.logic, kodkod (alloy) (e.g. Sudoku)

QUESTIONS

NOTES

- David Nolen, 'Architecture of core.logic'
- only 'and' and 'or' are n-ary, all other operators binary
- Basicfunctions must not be changed from macros to functions as cnf transformation
  would not work anymore (works with macroexpand).
- RSyntaxRichTextArea
- MPA: no own macro processo
  idea: 
    Input "human" code 
    -> Clj-Button 
    -> show clojure code
    -> start REPL (autoload generated code) 
    -> do something...
    -> save (in REPL)
- Queens problem for (n = 2) (must be false for all):
	(a1 -> (!b1 and !a2 and !b2))
	and 
	(a2 -> (!b1 and !b2 and !a1))
	and
	(b1 -> (!a1 and !a2 and !b2))
	and
	(b2 -> (!a1 and !a2 and !b1))
	and
	(a1 or b1)
	and
	(a2 or b2)
	and
	(a1 or a2)
	and
	(b1 or b2)
